[tool.poetry]
name = "case-management-service"
version = "0.4.0" # Assuming a version bump due to significant changes
description = "Case Management Microservice for KYC/KYB, using FastAPI, Kafka, MongoDB, CQRS/ES, and OpenTelemetry."
authors = ["AI Developer <ai.dev@example.com>"] # Placeholder author
license = "MIT" # Placeholder license
readme = "README.md"
packages = [
    { include = "app" },
    # { include = "core" }, # 'core' has been moved to app/service
    { include = "infrastructure" },
]
# The above 'packages' directive assumes that 'app', and 'infrastructure'
# are directories directly under 'case_management_service/' (where this pyproject.toml resides)
# and are intended to be importable modules of the 'case-management-service' package.
# For example, `from app.main import ...` or `from core.commands import ...`.
# This is a common way to structure a project managed by Poetry when pyproject.toml
# is at the root of the source code for the package.

[tool.poetry.dependencies]
python = "^3.9"
fastapi = "^0.100.0"
uvicorn = {extras = ["standard"], version = "^0.23.0"}
pydantic = "^2.0"
pydantic-settings = "^2.0"
confluent-kafka = "^2.2.0"
pymongo = "^4.3"
python-json-logger = "^2.0.7"
opentelemetry-api = "^1.19.0"
opentelemetry-sdk = "^1.19.0"
opentelemetry-exporter-otlp-proto-grpc = "^1.19.0"
httpx = "^0.24.0"
opentelemetry-instrumentation-fastapi = {version = "^0.55b1", allow-prereleases = true}
opentelemetry-instrumentation-pymongo = {version = "^0.55b1", allow-prereleases = true}


[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
flake8 = "^6.0.0"
black = "^23.7.0"
isort = "^5.12.0"
pytest-cov = "^4.1.0"
motor = "^3.3.1"
mongomock = "^4.1.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
